from model.LLM import LModel
from utils.ProcessData import ProcessPDF, RetrievalAgent
from utils.SlackBot import SlackBot
import json


class AIAgent:
    """Main agent class that orchestrates the document query and Slack notification."""

    def __init__(self, cfg, logger):
        self.cfg = cfg
        self.logger = logger
        self.lm = LModel(cfg, logger)
        self.pdf_processor = ProcessPDF(cfg, logger, self.lm)
        self.slack_bot = SlackBot(self.cfg, logger)
        self.retrieve_agent = RetrievalAgent(self.lm, self.pdf_processor)

    def process_and_respond(self, queries):
        """Main method to handle document processing and Slack posting."""
        try:
            # Step 1: Process PDF and prepare context
            self.pdf_processor.process()
            self.logger.info("PDF content extracted and split into chunks.")

            # Step 2: Retreival and Query
            answer = []
            if self.cfg.embed:
                for query in queries:
                    relevant_ctx = self.retrieve_agent.find_relevant_context(query)
                    answer.append(self.lm.query_model(query, relevant_ctx))
            else:
                for query in queries:
                    answer.append(self.lm.query_model(query, self.pdf_processor.chunks))

            # Step 3: Posting to Slack
            if answer:
                answer = json.dumps({"PDF-QA-Results": [{"question": question, "answer": answer} for question, answer in zip(queries, answer)]}, indent=4)
                self.logger.info("Answer generated by language model.")
                # Step 3: Post the answer to Slack
                self.slack_bot.post_message(answer)
                self.logger.info("Answer posted to Slack successfully.")
            else:
                self.logger.warning("No answer was generated.")
        except Exception as e:
            self.logger.error(f"Error in processing and responding: {e}")
            self.slack_bot.post_message("Failed to retrieve the answer. Please check the logs.")